---
import BaseLayout from "../../../components/Common/BaseLayout.astro";
import SessionCard from "../../../components/Sessions/SessionCard.astro";
import { getSessions } from "../../../data/repositories/sessionize_repository";
import type { SessionInfo } from "../../../data/types/sessionize";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";

interface Props {
    topic: string;
    sessions: SessionInfo[];
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);


export async function getStaticPaths() {
    const sessions = await getSessions(true);

    const topics = [...new Set(sessions.map((s) => s.topics).flat())]

    const topicSessions = topics.map((topic) => {
        const sessionsFound = sessions.filter((session) =>
            session.topics.includes(topic)
        );
        return {
            topic: topic,
            sessions: sessionsFound,
        };
    });

    return topicSessions.map((entry) => {
        const topicEntry = entry.topic.replaceAll(" ", "-").toLocaleLowerCase();

        return { params: { topic: topicEntry }, props: entry };
    });
}

// 2. When it's time to render, you can get the entry directly from the prop
const { topic, sessions } = Astro.props;

---
<BaseLayout pageTitle={t("session.topics.topicSessionList").replace("$topic$", topic)}>
    <div class="grid lg:grid-cols-3 md:grid-cols-2 grid-flow-row gap-8 mt-5 mb-7">
        {sessions.map((s) => <SessionCard session={s} />)}
    </div>
</BaseLayout>
