---
import type { SessionInfo } from "../../data/types/sessionize";
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../../i18n/utils";
import SessionTopic from "./SessionTopic.astro";

interface Props {
  session: SessionInfo;
}
//speaker.data

const { session } = Astro.props;

const dateStart = new Date(session.startsAt);
const dateEnd = new Date(session.endsAt);

const duration = dateEnd.getTime() - dateStart.getTime();
const minDuration = Math.floor(duration / (1000 * 60));
const durationHours = Math.floor(minDuration / 60);
const durationMinutes = minDuration % 60;

const lang = getLangFromUrl(Astro.url);
const getPath = useTranslatedPath(lang);
const t = useTranslations(lang);
---

<a
  href={getPath(`/sessions/${session.slug}`)}
  class="not-colored p-3 card bg-white text-base-content md:hover:scale-110 rounded-lg animated flex flex-col h-[22rem]"
>
  <div class="flex justify-between gap-4">
    <p class="text-xl font-medium mb-3">{session.title}</p>
  </div>
  <div class="flex flex-wrap gap-2">
    <div class="py-1 px-2 rounded-md bg-red text-white flex items-center">
      <span class="text-sm">{session.sessionLevel}</span>
    </div>
    {session.topics.map((t) => <SessionTopic topic={t} brightness="light" />)}
  </div>
  <div class="flex mt-auto">
    <div class="flex-flex-col gap-2">
      {
        session.language && (
          <div class="flex gap-3 items-center">
            <div class="w-4">
              <img src="/assets/vectors/translate.svg" alt="session duration" />
            </div>
            <div>{session.language}</div>
          </div>
        )
      }
      {
        session.room && (
          <div class="flex gap-3 items-center">
            <div class="w-4">
              <img src="/assets/vectors/pin.svg" alt="session duration" />
            </div>
            <div>{session.room ?? t("sessions.toBeAnnunced")}</div>
          </div>
        )
      }
      {
        minDuration > 0 && (
          <div class="flex gap-3 items-center">
            <div class="w-4">
              <img src="/assets/vectors/time.svg" alt="session duration" />
            </div>
            <div>
              {durationHours == 0
                ? null
                : `${durationHours} ${t("sessions.shortHours")}`}
              {durationMinutes == 0
                ? null
                : `${durationMinutes} ${t("sessions.shortMinutes")}`}
            </div>
          </div>
        )
      }
    </div>
  </div>
  {
    session.speakers && (
      <>
        <div class="mb-3 mt-4 border border-t-0 border-gray-400/50" />
        <div class="flex flex-col gap-2">
          {session.speakers.map((speaker) => (
            <div class="flex flex-row">
              <div class="flex-none w-10 pr-3">
                <img
                  class="rounded-full"
                  src={speaker.profilePicture}
                  alt={speaker.fullName}
                />
              </div>
              <div class="flex-1">
                <p class="text-md">{speaker.fullName}</p>
              </div>
            </div>
          ))}
        </div>
      </>
    )
  }
</a>
