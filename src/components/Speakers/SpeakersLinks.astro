---
import { type SpeakerLinks } from "../../data/types/sessionize";

interface Props {
  links: SpeakerLinks;
}

const { links:{ websites, ...known_links} }:Props = Astro.props;


---

<div class="flex flex-row items-center">
  {Object.keys(known_links).map(k => {
    const link = known_links[k];
    if (link && typeof link === 'string') {
      return (
        <a
          class="not-colored p-1 mr-2 cursor-pointer hover:opacity-75 transition-opacity"
          href={link}
        >
          <img class="w-6" src={`/assets/vectors/${k}_logo.svg`} /> {/*TODO custom logo for companyWebsite*/}
        </a>
      );
    }
  })}
  {
    websites &&
      websites.map((website:string) => (
        <a
          class="not-colored p-1 mr-2 cursor-pointer hover:opacity-75 transition-opacity"
          href={website}
        >
          <img class="w-6" src="/assets/vectors/web_logo.svg" />
        </a>
      ))
  }
</div>
